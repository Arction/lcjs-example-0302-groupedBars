(self.webpackChunk=self.webpackChunk||[]).push([[143],{138:(e,t,s)=>{const r=s(809),{lightningChart:o,emptyLine:a,AutoCursorModes:i,UIOrigins:n,LegendBoxBuilders:d,AxisScrollStrategies:l,AxisTickStrategies:u,UIElementBuilders:c,Themes:g}=r,m=o();let p;p=e=>{const t=[],s=[],r=m.ChartXY(e).setTitle("Grouped Bars (Employee Count)").setAutoCursorMode(i.onHover).setMouseInteractions(!1).setPadding({bottom:30}),o=r.getDefaultAxisX().setMouseInteractions(!1).setScrollStrategy(void 0).setTickStrategy(u.Empty);r.getDefaultAxisY().setMouseInteractions(!1).setTitle("Number of Employees").setInterval(0,70).setScrollStrategy(l.fitting),r.setAutoCursor((e=>e.disposePointMarker().disposeTickMarkerX().disposeTickMarkerY().setGridStrokeXStyle(a).setGridStrokeYStyle(a).setResultTable((e=>{e.setOrigin(n.CenterBottom)}))));const g=r.addLegendBox(d.VerticalLegendBox).setAutoDispose({type:"max-width",maxWidth:.2}).setTitle("Department");return{addCategory:e=>{const a=(e=>{const t=r.addRectangleSeries();return t.setCursorResultTableFormatter(((t,s,r)=>{let o={name:e.name,value:e.data[e.figures.indexOf(r)]};return t.addRow("Department:",o.name).addRow("# of employees:",String(o.value))})),t})(e).setName(e.name);e.figures=e.data.map((e=>a.add({x:0,y:0,width:0,height:0}))),g.add(a),s.push(e),(()=>{let e=0;for(let r=0;r<t.length;r++){const o=t[r],a=e;for(const t of s){const s=t.data[r];void 0!==s&&(t.figures[r].setDimensions({x:e,y:0,width:10,height:s}),e+=12.5)}o.tick.setValue((a+e-2.5)/2),e+=7.5}o.setInterval(-10,e)})()},addGroups:e=>{for(const s of e)t.push({name:s,tick:o.addCustomTick(c.AxisTick).setGridStrokeLength(0).setTextFormatter((e=>s))})}}};const h=p({});h.addGroups(["Finland","Germany","UK"]);const k=["Engineers","Sales","Marketing"];[[48,27,24],[19,40,14],[33,33,62]].forEach(((e,t)=>h.addCategory({name:k[t],data:e})))}},e=>{e.O(0,[736],(()=>(138,e(e.s=138)))),e.O()}]);